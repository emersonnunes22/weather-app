[{"/data/data/com.termux/files/home/weather-app/src/index.js":"1","/data/data/com.termux/files/home/weather-app/src/App.js":"2"},{"size":232,"mtime":1664989573117,"results":"3","hashOfConfig":"4"},{"size":2716,"mtime":1665608827231,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","suppressedMessages":"8","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"9"},"p3tuud",{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},"/data/data/com.termux/files/home/weather-app/src/index.js",[],[],[],"/data/data/com.termux/files/home/weather-app/src/App.js",["14","15","16","17","18"],[],"import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\nconst [ city, setCity ] = useState('');\nconst input = document.querySelector('.Input');\nconst search = document.querySelector('.Search');\nconst humidade = document.querySelector('.Humidade p');\nconst ceu = document.querySelector('.Ceu p');\nconst cidade = document.querySelector('.Cidade');\nconst vento = document.querySelector('.Ventos p');\nconst temp = document.querySelector('.Temp');\nconst weatherIcon = document.querySelector('.Weather-icon');\n\n async function fetchApi (event) {\n   if( city != \"\") {\n  event.preventDefault();\n  const cityvalor = city;\n   let key = process.env.REACT_APP_API_KEY;\n  const url = `https://api.openweathermap.org/data/2.5/weather?q=${cityvalor},BR&appid=${key}&units=metric&lang=pt_br`;\n  const response = await fetch(url);\n  const data = await response.json();\n  if(response.status == 404) {\n    alert(\"Cidade não encontrada\");\n    window.location.reload();\n  }\n  if(city.length > 20) {\n    cidade.classList.add(\"small\");\n  } else {\n    cidade.classList.remove(\"small\");\n  }\n  cidade.textContent = data.name;\n  temp.textContent = Math.floor(data.main.temp);\n  humidade.textContent = `${data.main.humidity}%`;\n  ceu.textContent = data.weather[0].description;\n  weatherIcon.src = 'http://openweathermap.org/img/wn/'+data.weather[0].icon+'@2x.png';\n  vento.textContent = `${Math.floor(data.wind.speed)}km/h`;\n } else {\n  alert(\"você não digitou nenhuma cidade\");\n  event.preventDefault();\n}\n}\n  return (\n    <div className=\"App\">\n    <link href='https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css' rel='stylesheet' />\n     <div className=\"Card\">\n     <form>\n     <input className=\"Input\"\n     onChange={(event) => setCity (event.target.value.trim())}\n     placeholder=\"Digite alguma cidade\" />\n     <button className=\"Search\" onClick={ fetchApi }>\n     <i class='bx bx-search' id=\"Icon-lupa\"></i>\n     </button>\n     </form>\n     <div className=\"Dados\">\n     <h1 className=\"Cidade\">~</h1>\n     <div className=\"Temp-celsius\">\n     <h2 className=\"Temp\">0</h2>\n     <span className=\"Celsius\">°C</span>\n     </div>\n     <div className=\"Ventos\">\n     <h2>Vel do Vento:</h2>\n     <div className=\"Vel-do-vento\">\n     <p>0 km/h</p>\n     <i class='bx bx-wind' id=\"Icon-wind\"></i>\n     </div>\n     </div>\n     <div className=\"Weather-card\">\n     <img src=\"http://openweathermap.org/img/wn/03n@2x.png\" class=\"Weather-icon\" />\n     </div>\n     </div>\n     <div className=\"Dados-extras\">\n     <div className=\"Humidade\">\n     <h2>Humidade:</h2>\n     <p>0%</p>\n     </div>\n     <div className=\"Ceu\">\n     <h2>Agora:</h2>\n     <p>--</p>\n     </div>\n     </div>\n     </div>\n    </div>\n   );\n}\nexport default App;\n\n\n",{"ruleId":"19","severity":1,"message":"20","line":6,"column":7,"nodeType":"21","messageId":"22","endLine":6,"endColumn":12},{"ruleId":"19","severity":1,"message":"23","line":7,"column":7,"nodeType":"21","messageId":"22","endLine":7,"endColumn":13},{"ruleId":"24","severity":1,"message":"25","line":16,"column":13,"nodeType":"26","messageId":"27","endLine":16,"endColumn":15},{"ruleId":"24","severity":1,"message":"28","line":23,"column":22,"nodeType":"26","messageId":"27","endLine":23,"endColumn":24},{"ruleId":"29","severity":1,"message":"30","line":69,"column":6,"nodeType":"31","endLine":69,"endColumn":84},"no-unused-vars","'input' is assigned a value but never used.","Identifier","unusedVar","'search' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]